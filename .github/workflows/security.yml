name: "🔒 Security Analysis"

on:
  push:
    branches: [ "master", "main", "develop" ]
  pull_request:
    branches: [ "master", "main", "develop" ]
  schedule:
    # Run weekly security scan on Saturdays at 2 AM UTC
    - cron: '0 2 * * 6'

jobs:
  security-scan:
    name: "Security Analysis"
    runs-on: ubuntu-latest
    
    permissions:
      security-events: write
      actions: read
      contents: read
    
    strategy:
      fail-fast: false
      matrix:
        tool: [bandit, semgrep]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit[toml] semgrep
        
    - name: Run Bandit Security Scan
      if: matrix.tool == 'bandit'
      run: |
        echo "🔍 Running Bandit security analysis..."
        bandit -r src/ -f json -o bandit-results.json || true
        bandit -r src/ -f txt > bandit-summary.txt || true
        
    - name: Run Semgrep Security Scan
      if: matrix.tool == 'semgrep'
      run: |
        echo "🔍 Running Semgrep security analysis..."
        semgrep --config=auto src/ --json --output=semgrep-results.json || true
        semgrep --config=auto src/ --text --output=semgrep-summary.txt || true
        
    - name: Upload Bandit Results
      if: matrix.tool == 'bandit'
      uses: actions/upload-artifact@v3
      with:
        name: bandit-security-results
        path: |
          bandit-results.json
          bandit-summary.txt
        retention-days: 30
        
    - name: Upload Semgrep Results
      if: matrix.tool == 'semgrep'
      uses: actions/upload-artifact@v3
      with:
        name: semgrep-security-results
        path: |
          semgrep-results.json
          semgrep-summary.txt
        retention-days: 30

  dependency-scan:
    name: "Dependency Security Check"
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install safety
      run: |
        python -m pip install --upgrade pip
        pip install safety
        
    - name: Run Safety Check
      run: |
        echo "🔍 Checking dependencies for vulnerabilities..."
        safety check --json --output safety-results.json || true
        safety check --output safety-summary.txt || true
        
    - name: Upload Safety Results
      uses: actions/upload-artifact@v3
      with:
        name: dependency-security-results
        path: |
          safety-results.json
          safety-summary.txt
        retention-days: 30

  secrets-scan:
    name: "Secrets Detection"
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Run TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.repository.default_branch }}
        head: HEAD
        extra_args: --debug --only-verified

  security-report:
    name: "Generate Security Report"
    runs-on: ubuntu-latest
    needs: [security-scan, dependency-scan]
    if: always()
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Generate Security Summary
      run: |
        echo "# 🔒 Security Analysis Report" > security-report.md
        echo "" >> security-report.md
        echo "**Date:** $(date)" >> security-report.md
        echo "**Branch:** ${{ github.ref_name }}" >> security-report.md
        echo "**Commit:** ${{ github.sha }}" >> security-report.md
        echo "" >> security-report.md
        
        echo "## 📊 Scan Results" >> security-report.md
        echo "" >> security-report.md
        
        if [ -f bandit-security-results/bandit-summary.txt ]; then
          echo "### Bandit Results" >> security-report.md
          echo '```' >> security-report.md
          head -20 bandit-security-results/bandit-summary.txt >> security-report.md
          echo '```' >> security-report.md
          echo "" >> security-report.md
        fi
        
        if [ -f semgrep-security-results/semgrep-summary.txt ]; then
          echo "### Semgrep Results" >> security-report.md
          echo '```' >> security-report.md
          head -20 semgrep-security-results/semgrep-summary.txt >> security-report.md
          echo '```' >> security-report.md
          echo "" >> security-report.md
        fi
        
        if [ -f dependency-security-results/safety-summary.txt ]; then
          echo "### Dependency Check Results" >> security-report.md
          echo '```' >> security-report.md
          head -20 dependency-security-results/safety-summary.txt >> security-report.md
          echo '```' >> security-report.md
          echo "" >> security-report.md
        fi
        
    - name: Upload Security Report
      uses: actions/upload-artifact@v3
      with:
        name: security-analysis-report
        path: security-report.md
        retention-days: 30
        
    - name: Comment PR with Security Results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          if (fs.existsSync('security-report.md')) {
            const report = fs.readFileSync('security-report.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });
          }

